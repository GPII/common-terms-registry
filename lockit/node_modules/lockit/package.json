{
  "name": "lockit",
  "version": "0.0.5",
  "description": "Routes and methods for user registration for Express apps",
  "main": "index.js",
  "scripts": {
    "test": "grunt"
  },
  "keywords": [
    "express",
    "middleware",
    "user",
    "registration",
    "signup",
    "authorization",
    "authentication"
  ],
  "author": {
    "name": "Mirco Zeiss",
    "email": "mirco.zeiss@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/zeMirco/lockit"
  },
  "dependencies": {
    "lockit-signup": "0.0.3",
    "lockit-forgot-password": "0.0.3",
    "lockit-delete-account": "0.0.4",
    "lockit-couchdb-adapter": "0.0.3",
    "lockit-sendmail": "0.0.3",
    "nano": "~4.1.4"
  },
  "devDependencies": {
    "express": "3.3.5",
    "jade": "*",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.4",
    "grunt-mocha-test": "~0.7.0",
    "supertest": "~0.8.0",
    "should": "~2.0.1"
  },
  "readme": "# Lockit\n\n[![Build Status](https://travis-ci.org/zeMirco/lockit.png?branch=master)](https://travis-ci.org/zeMirco/lockit) [![NPM version](https://badge.fury.io/js/lockit.png)](http://badge.fury.io/js/lockit)\n\n[![NPM](https://nodei.co/npm/lockit.png)](https://nodei.co/npm/lockit/)\n\nLockit is an Express module that offers routes and methods for user registration.\nIt can be used as a starting point to add user signup functionality to your app.\n\nIt consists of multiple single purpose modules:\n\n - [lockit-login](https://github.com/zeMirco/lockit-login)\n - [lockit-signup](https://github.com/zeMirco/lockit-signup)\n - [lockit-delete-account](https://github.com/zeMirco/lockit-delete-account)\n - [lockit-forgot-password](https://github.com/zeMirco/lockit-forgot-password)\n - [lockit-sendmail](https://github.com/zeMirco/lockit-sendmail)\n - [lockit-couchdb-adapter](https://github.com/zeMirco/lockit-couchdb-adapter)\n - [lockit-mongodb-adapter](https://github.com/zeMirco/lockit-mongodb-adapter)\n\n## Installation\n\n`npm install lockit`\n\n```js\nvar config = require('./config.js');\nvar signup = require('lockit');\n\nvar app = express();\n\n// set basedir so views can properly extend layout.jade\napp.locals.basedir = __dirname + '/views';\n\n// express settings\n// ...\n\n// sessions are required - either cookie or some sort of db\napp.use(express.cookieParser('your secret here'));\napp.use(express.cookieSession());\napp.use(app.router);\n\n// use middleware after router so it doesn't interfere with your own routes\nlockit(app, config);\n\n// serve static files as last middleware\napp.use(express.static(path.join(__dirname, 'public')));\n```\n\n## Configuration\n\nYou need to have a `config.js` somewhere in your app. Load this file into your app via `var config = require('./config.js')`\nand call `lockit` with `app` as the first and `config` as the second argument.\n\n`lockit(app, config);`\n\nYou need two things to run `lockit`. A database and an email service. As of now CouchDB and MongoDB are supported out\nof the box. More databases might come in the near future. The email service is needed to send email verification links\nand forgot password links. All email functionality is provided by [lockit-sendmail](https://github.com/zeMirco/lockit-sendmail)\nwhich uses [nodemailer](https://github.com/andris9/Nodemailer) under the hood. Therefore the settings are the same.\n\nHere is a minimal `config.js`.\n\n```js\nexports.appname = 'Test App';\nexports.url = 'http://localhost:3000';\n// port is needed for tests - providing the full url is usually enough\nexports.port = 3000;\n\n// email settings\nexports.emailType = 'Stub';\nexports.emailSettings = {\n  service: 'none',\n  auth: {\n    user: 'none',\n    pass: 'none'\n  }\n};\n\nexports.emailTemplate = 'blank';\n\n// signup settings\nexports.signupRoute = '/signup';\nexports.signupTokenExpiration = 24 * 60 * 60 * 1000;\n\n// forgot password settings\nexports.forgotPasswordRoute = '/forgot-password';\nexports.forgotPasswordTokenExpiration = 24 * 60 * 60 * 1000;\n\n// database settings (CouchDB)\nexports.db = 'couchdb';\nexports.dbUrl = 'http://127.0.0.1:5984/test';\n\n// database settings (MongoDB)\n// exports.db = 'mongodb';\n// exports.dbUrl = 'mongodb://127.0.0.1/test';\n// exports.dbCollection = 'users';\n\n// lock account\n// show warning after three failed login attempts\nexports.failedLoginsWarning = 3;\n// lock account after five failed login attempts\nexports.failedLoginAttempts = 5;\n// lock account for 20 minutes\nexports.accountLockedTime = 1000 * 60 * 20;\n\n// email signup template\nexports.emailSignup = {\n  subject: 'Welcome to <%- appname %>',\n  title: 'Welcome to <%- appname %>',\n  text: [\n    '<h2>Hello <%- username %></h2>',\n    'Welcome to <%- appname %>.',\n    '<p><%- link %> to complete your registration.</p>'\n  ].join(''),\n  linkText: 'Click here'\n};\n\n// email already taken template\nexports.emailSignupTaken = {\n  subject: 'Email already registered',\n  title: 'Email already registered',\n  text: [\n    '<h2>Hello <%- username %></h2>',\n    'you or someone else tried to sign up for <%- appname %>.',\n    '<p>Your email is already registered and you cannot sign up twice.',\n    ' If you haven\\'t tried to sign up, you can safely ignore this email. Everything is fine!</p>',\n    '<p>The <%- appname %> Team</p>'\n  ].join('')\n};\n\n// resend signup template\nexports.emailResendVerification = {\n  subject: 'Complete your registration',\n  title: 'Complete your registration',\n  text: [\n    '<h2>Hello <%- username %></h2>',\n    'here is the link again. <%- link %> to complete your registration.',\n    '<p>The <%- appname %> Team</p>'\n  ].join(''),\n  linkText: 'Click here'\n};\n\n// forgot password template\nexports.emailForgotPassword = {\n  subject: 'Reset your password',\n  title: 'Reset your password',\n  text: [\n    '<h2>Hey <%- username %></h2>',\n    '<%- link %> to reset your password.',\n    '<p>The <%- appname %> Team</p>'\n  ].join(''),\n  linkText: 'Click here'\n};\n```\n\n## Features\n\n - two responsive html email templates: [blank](https://github.com/zeMirco/lockit-sendmail/blob/master/templates/blank/index.html) and [base boxed basic query](https://github.com/mailchimp/email-blueprints/blob/master/responsive-templates/base_boxed_basic_query.html)\n - CouchDB and MongoDB support out of the box\n - email address verification\n - account locking after too many failed login attempts\n - verification link expiration\n - failed login tracking\n - /login redirection when user is unauthorized\n - password hash generation with bcrypt\n - unit tests for all modules\n - implementation of [lots of](https://www.owasp.org/index.php/Guide_to_Authentication) [best](http://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication) [pratices](https://www.owasp.org/index.php/Authentication_Cheat_Sheet)\n\n\n## Routes included\n\nFrom [lockit-signup](https://github.com/zeMirco/lockit-signup)\n\n - GET /signup\n - POST /signup\n - GET /signup/:token\n - GET /signup/resend-verification\n - POST /signup/resend-verification\n\nFrom [lockit-login](https://github.com/zeMirco/lockit-login)\n\n - GET /login\n - POST /login\n - GET /logout\n\nFrom [lockit-forgot-password](https://github.com/zeMirco/lockit-forgot-password)\n\n - GET /forgot-password\n - POST /forgot-password\n - GET /forgot-password/:token\n - POST /forgot-password/:token\n\nFrom [lockit-delete-account](https://github.com/zeMirco/lockit-delete-account)\n\n - GET /delete-account\n - POST /delete-account\n\n## Test\n\n`grunt`\n\n## License\n\nCopyright (C) 2013 [Mirco Zeiss](mailto: mirco.zeiss@gmail.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/zeMirco/lockit/issues"
  },
  "homepage": "https://github.com/zeMirco/lockit",
  "_id": "lockit@0.0.5",
  "_from": "lockit@*"
}
