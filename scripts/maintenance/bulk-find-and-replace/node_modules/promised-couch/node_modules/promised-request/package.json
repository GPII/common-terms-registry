{
  "name": "promised-request",
  "description": "A wrapper for Mikeals request module, that returns a promise",
  "author": {
    "name": "Siegmund FÃ¼hringer",
    "email": "io@sifu.io",
    "url": "http://sifu.io"
  },
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "http://github.com/sifu/promised-request"
  },
  "dependencies": {
    "request": ">=2.2.9",
    "promised-io": ">=0.3.0"
  },
  "engines": [
    "node >= 0.4.1"
  ],
  "main": "./main",
  "readme": "# A wrapper for Mikeals request module, that returns a promise\n\nUsually you can use promised-io.promise.convertNodeAsyncFunction to convert any\nfunction to a promise returning function. But convertNodeAsyncFunction is smart\nand figures out that request returns two success values - response and body -\nand therefore emits an array. since you can get to the body argument of request also\nby response.body, that is the only success value you need. and that is what this\nwrapper method does.\n\n\n## Usage:\n\n``` javascript\nvar request = require( 'promised-request' );\nrequest( 'http://sifu.io' ).then( function( response ) { console.info( resonse.body ) } );\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/sifu/promised-request/issues"
  },
  "homepage": "https://github.com/sifu/promised-request",
  "_id": "promised-request@1.0.0",
  "_from": "promised-request@1.0.0"
}
